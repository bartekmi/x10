// This file was auto-generated by x10. Do not modify by hand.
// @flow

import * as React from 'react';
import { createFragmentContainer, graphql } from 'react-relay';

import Text from 'latitude/Text';

import FormProvider from 'react_lib/form/FormProvider';
import basicCommitMutation from 'react_lib/relay/basicCommitMutation';

import { hitCalculateErrors, type Hit } from 'dps/entities/Hit';



type Props = {|
  +hit: Hit,
  +onChange: (hit: Hit) => void,
|};
function Workspace(props: Props): React.Node {
  const { hit, onChange } = props;

  return (
    <FormProvider
      value={ { errors: hitCalculateErrors(hit) } }
    >
      <Text
        scale='display'
        children='TODO'
      />
    </FormProvider>
  );
}

type StatefulProps = {|
  +hit: Hit,
|};
export function WorkspaceStateful(props: StatefulProps): React.Node {
  const hit = relayToInternal(props.hit);
  const [editedHit, setEditedHit] = React.useState(hit);
  return <Workspace
    hit={ editedHit }
    onChange={ setEditedHit }
  />
}

function relayToInternal(relay: any): Hit {
  return {
    ...relay,
  };
}

function save(hit: Hit) {
  basicCommitMutation(mutation, { hit });
}

const mutation = graphql`
  mutation WorkspaceMutation(
    $hit: HitInput!
  ) {
    createOrUpdateHit(
      hit: $hit
    )
  }
`;

// $FlowExpectedError
export default createFragmentContainer(WorkspaceStateful, {
  hit: graphql`
    fragment Workspace_hit on Hit {
      id
    }
  `,
});

