// This file was auto-generated by x10. Do not modify by hand.
// @flow

import * as React from 'react';
import { createFragmentContainer, graphql } from 'react-relay';

import Group from 'latitude/Group';
import Text from 'latitude/Text';

import DateDisplay from 'react_lib/display/DateDisplay';
import EnumDisplay from 'react_lib/display/EnumDisplay';
import TextDisplay from 'react_lib/display/TextDisplay';
import Table from 'react_lib/table/Table';

import { type Hit } from 'dps/entities/Hit';
import { shipmentFlexId, TransportationModeEnumPairs } from 'dps/entities/Shipment';

import { type ShipmentTab_hit } from './__generated__/ShipmentTab_hit.graphql';



type Props = {|
  +hit: ShipmentTab_hit,
|};
function ShipmentTab(props: Props): React.Node {
  const { hit } = props;

  return (
    <Group
      flexDirection='column'
    >
      <Text
        scale='title'
        weight='bold'
        children='Shipments'
      />
      <Table
        data={ hit?.shipments }
        columns={
          [
            {
              id: 0,
              Header: 'Flex Id',
              width: 140,
              accessor: (data) => shipmentFlexId(data),
              Cell: ({ value }) =>
                <TextDisplay
                  value={ value }
                />
              ,
            },
            {
              id: 1,
              Header: 'Name',
              width: 140,
              accessor: (data) => data?.name,
              Cell: ({ value }) =>
                <TextDisplay
                  value={ value }
                />
              ,
            },
            {
              id: 2,
              Header: 'Name',
              width: 140,
              accessor: (data) => data?.consignee?.name,
              Cell: ({ value }) =>
                <TextDisplay
                  value={ value }
                />
              ,
            },
            {
              id: 3,
              Header: 'Name',
              width: 140,
              accessor: (data) => data?.shipper?.name,
              Cell: ({ value }) =>
                <TextDisplay
                  value={ value }
                />
              ,
            },
            {
              id: 4,
              Header: 'Transportation Mode',
              width: 140,
              accessor: (data) => data?.transportationMode,
              Cell: ({ value }) =>
                <EnumDisplay
                  value={ value }
                  options={ TransportationModeEnumPairs }
                />
              ,
            },
            {
              id: 5,
              Header: 'Status',
              width: 140,
              accessor: (data) => data?.status,
              Cell: ({ value }) =>
                <TextDisplay
                  value={ value }
                />
              ,
            },
            {
              id: 6,
              Header: 'Customs',
              width: 140,
              accessor: (data) => data?.customs,
              Cell: ({ value }) =>
                <TextDisplay
                  value={ value }
                />
              ,
            },
            {
              id: 7,
              Header: 'Cargo Ready',
              width: 140,
              accessor: (data) => data?.cargoReady,
              Cell: ({ value }) =>
                <DateDisplay
                  value={ value }
                />
              ,
            },
            {
              id: 8,
              Header: 'Departs Date',
              width: 140,
              accessor: (data) => data?.departsDate,
              Cell: ({ value }) =>
                <DateDisplay
                  value={ value }
                />
              ,
            },
            {
              id: 9,
              Header: 'Arrives Date',
              width: 140,
              accessor: (data) => data?.arrivesDate,
              Cell: ({ value }) =>
                <DateDisplay
                  value={ value }
                />
              ,
            },
            {
              id: 10,
              width: 140,
              accessor: (data) => data,
              Cell: ({ value }) =>
                <Group
                  flexDirection='column'
                >
                  <TextDisplay
                    value={ value?.dueDateTask }
                  />
                  <DateDisplay
                    weight='bold'
                    value={ value?.dueDate }
                  />
                </Group>
              ,
            },
          ]
        }
      />
    </Group>
  );
}

// $FlowExpectedError
export default createFragmentContainer(ShipmentTab, {
  hit: graphql`
    fragment ShipmentTab_hit on Hit {
      id
      shipments {
        id
        arrivesDate
        cargoReady
        consignee {
          id
          toStringRepresentation
          name
        }
        coreId
        customs
        departsDate
        dueDate
        dueDateTask
        name
        shipper {
          id
          toStringRepresentation
          name
        }
        status
        transportationMode
      }
    }
  `,
});

