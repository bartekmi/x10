// This file was auto-generated by x10. Do not modify by hand.
// @flow

import * as React from 'react';
import { createFragmentContainer, graphql } from 'react-relay';

import Group from 'latitude/Group';
import Icon from 'latitude/Icon';

import TextDisplay from 'react_lib/display/TextDisplay';
import TimestampDisplay from 'react_lib/display/TimestampDisplay';
import Button from 'react_lib/latitude_wrappers/Button';
import MultiStacker from 'react_lib/multi/MultiStacker';

import { type Hit } from 'dps/entities/Hit';
import { createDefaultMessage, messageFlexId, messageShipmentUrl } from 'dps/entities/Message';
import { userName } from 'dps/entities/User';

import { type EscalationTab_hit } from './__generated__/EscalationTab_hit.graphql';



type Props = {|
  +hit: EscalationTab_hit,
|};
function EscalationTab(props: Props): React.Node {
  const { hit } = props;

  return (
    <Group
      flexDirection='column'
      gap={ 20 }
    >
      <Group
        alignItems='center'
      >
        <Icon
          iconName='attention'
        />
        <TextDisplay
          value='Ops sent these messages when they escalated this hit'
        />
      </Group>
      <MultiStacker
        items={ hit?.messages }
        itemDisplayFunc={ (data, onChange) => (
          <Group
            flexDirection='column'
            gap={ 4 }
          >
            <Group
              alignItems='center'
              gap={ 20 }
            >
              <TextDisplay
                value={ userName(data?.user) }
              />
              <TimestampDisplay
                value={ data?.timestamp }
              />
            </Group>
            <TextDisplay
              value={ data?.text }
            />
            <Button
              label={ messageFlexId(data) }
              url={ messageShipmentUrl(data) }
            />
          </Group>
        ) }
        addNewItem={ createDefaultMessage }
      />
    </Group>
  );
}

// $FlowExpectedError
export default createFragmentContainer(EscalationTab, {
  hit: graphql`
    fragment EscalationTab_hit on Hit {
      id
      messages {
        id
        coreShipmentId
        text
        timestamp
        user {
          id
          toStringRepresentation
          firstName
          lastName
        }
      }
    }
  `,
});

