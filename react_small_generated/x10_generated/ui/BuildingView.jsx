// This file was auto-generated by x10. Do not modify by hand.
// @flow

import { type BuildingView_building } from './__generated__/BuildingView_building.graphql';
import { buildingAgeInYears, MailboxTypeEnumPairs, PetPolicyEnumPairs, type Building } from 'entities/Building';
import FloatInput from 'latitude/FloatInput';
import Group from 'latitude/Group';
import SelectInput from 'latitude/select/SelectInput';
import Text from 'latitude/Text';
import TextareaInput from 'latitude/TextareaInput';
import * as React from 'react';
import DisplayField from 'react_lib/form/DisplayField';
import DisplayForm from 'react_lib/form/DisplayForm';
import FormSection from 'react_lib/form/FormSection';
import X10_CalendarDateInput from 'react_lib/X10_CalendarDateInput';
import { createFragmentContainer, graphql } from 'react-relay';


type Props = {|
  +building: BuildingView_building,
|};
function BuildingView(props: Props): React.Node {
  const { building } = props;

  return (
    <DisplayForm>
      <Group
        flexDirection='column'
      >
        <Text
          scale='display'
          children={ 'Details for Building: ' + building.name }
        />
        <DisplayField
          toolTip='Description for advertising purposes'
          label='Description'
        >
          <TextareaInput
            value={ building.description }
            onChange={ () => { } }
            rows={ 3 }
            readOnly={ true }
          />
        </DisplayField>
        <FormSection
          label='Other Details'
        >
          <Group
            gap={ 40 }
          >
            <DisplayField
              label='Date Of Occupancy'
            >
              <X10_CalendarDateInput
                value={ building.dateOfOccupancy }
                onChange={ () => { } }
                readOnly={ true }
              />
            </DisplayField>
            <DisplayField
              toolTip='Strongly affects annual propery maintenance costs.'
              label='Age In Years'
            >
              <FloatInput
                value={ buildingAgeInYears(building) }
                onChange={ () => { } }
                readOnly={ true }
              />
            </DisplayField>
          </Group>
          <DisplayField
            label='Mailbox Type'
          >
            <SelectInput
              value={ building.mailboxType }
              onChange={ () => { } }
              options={ MailboxTypeEnumPairs }
            />
          </DisplayField>
          <DisplayField
            label='Pet Policy'
          >
            <SelectInput
              value={ building.petPolicy }
              onChange={ () => { } }
              options={ PetPolicyEnumPairs }
            />
          </DisplayField>
        </FormSection>
      </Group>
    </DisplayForm>
  );
}

// $FlowExpectedError
export default createFragmentContainer(BuildingView, {
  building: graphql`
    fragment BuildingView_building on Building {
      id
      dateOfOccupancy
      description
      mailboxType
      name
      petPolicy
    }
  `,
});

