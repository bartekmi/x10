// This file was auto-generated by x10. Do not modify by hand.
// @flow

import { type MoveView_move } from './__generated__/MoveView_move.graphql';
import { type Move } from 'entities/Move';
import Text from 'latitude/Text';
import * as React from 'react';
import DisplayField from 'react_lib/form/DisplayField';
import DisplayForm from 'react_lib/form/DisplayForm';
import FormSection from 'react_lib/form/FormSection';
import TextInput from 'react_lib/latitude_wrappers/TextInput';
import Separator from 'react_lib/Separator';
import { createFragmentContainer, graphql } from 'react-relay';
import BuildingView from 'ui/BuildingView';


type Props = {|
  +move: MoveView_move,
|};
function MoveView(props: Props): React.Node {
  const { move } = props;

  return (
    <DisplayForm>
      <Text
        scale='display'
        children='Move Details'
      />
      <Separator/>
      <FormSection
        label='Moving from location...'
      >
        <BuildingView building={ move.from }/>
      </FormSection>
      <FormSection
        label='Moving to location...'
      >
        <BuildingView building={ move.to }/>
      </FormSection>
      <FormSection
        label='Tenant details...'
      >
        <DisplayField
          label='Name'
        >
          <TextInput
            value={ move.tenant?.name }
            onChange={ () => { } }
            readOnly={ true }
          />
        </DisplayField>
        <DisplayField
          label='Phone'
        >
          <TextInput
            value={ move.tenant?.phone }
            onChange={ () => { } }
            readOnly={ true }
          />
        </DisplayField>
        <DisplayField
          label='Email'
        >
          <TextInput
            value={ move.tenant?.email }
            onChange={ () => { } }
            readOnly={ true }
          />
        </DisplayField>
        <DisplayField
          label='The Address'
        >
          <TextInput
            value={ move.tenant?.permanentMailingAddress?.theAddress }
            onChange={ () => { } }
            readOnly={ true }
          />
        </DisplayField>
      </FormSection>
    </DisplayForm>
  );
}

// $FlowExpectedError
export default createFragmentContainer(MoveView, {
  move: graphql`
    fragment MoveView_move on Move {
      id
      from {
        id
      }
      tenant {
        id
        email
        name
        permanentMailingAddress {
          id
          theAddress
        }
        phone
      }
      to {
        id
      }
    }
  `,
});

