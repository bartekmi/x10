// This file was auto-generated by x10. Do not modify by hand.
// @flow

import { v4 as uuid } from 'uuid';

import { DBID_LOCALLY_CREATED } from 'react_lib/constants';

import { addError, type FormError } from 'react_lib/form/FormProvider';
import isBlank from 'react_lib/utils/isBlank';

// Type Definition
export type Address = {|
  +id: string,
  +dbid: number,
  +unitNumber: string,
  +theAddress: string,
  +city: string,
  +stateOrProvince: string,
  +zip: string,
|};


// Create Default Function
export function createDefaultAddress(): Address {
  return {
    id: uuid(),
    dbid: DBID_LOCALLY_CREATED,
    unitNumber: '',
    theAddress: '',
    city: '',
    stateOrProvince: '',
    zip: '',
  };
}


// Derived Attribute Functions
export function addressFirstAddressLine(address: Address): string {
  const result = address.theAddress + '   Unit ' + address.unitNumber;
  return result;
}
export function addressSecondAddressLine(address: Address): string {
  const result = address.city + ', ' + address.stateOrProvince;
  return result;
}
export function addressThirdAddressLine(address: Address): string {
  const result = address.zip;
  return result;
}


// Validations
export function addressCalculateErrors(address: Address, prefix?: string): $ReadOnlyArray<FormError> {
  const errors = [];

  if (isBlank(address.theAddress))
    addError(errors, prefix, 'The Address is required', ['theAddress']);
  if (isBlank(address.city))
    addError(errors, prefix, 'City is required', ['city']);
  if (isBlank(address.stateOrProvince))
    addError(errors, prefix, 'State Or Province is required', ['stateOrProvince']);
  if (isBlank(address.zip))
    addError(errors, prefix, 'Zip is required', ['zip']);

  return errors;
}

