// This file was auto-generated by x10. Do not modify by hand.
// @flow


import { v4 as uuid } from 'uuid';

import { addError, type FormError } from 'react_lib/form/FormProvider';
import isBlank from 'react_lib/utils/isBlank';


// Type Definition
export type CtpatReview = {
  +id: string,
  +complianceScreenRequired: boolean,
  +status: ?CtpatReviewStatusEnum,
  +expiresAt: ?string,
  +complianceContactEmail: string,
};


// Enums
export const CtpatReviewStatusEnumPairs = [
  {
    value: 'compliant',
    label: 'Compliant',
  },
  {
    value: 'grace_period',
    label: 'Grace Period',
  },
  {
    value: 'non_compliant',
    label: 'Non Compliant',
  },
  {
    value: 'provisional',
    label: 'Provisional',
  },
];

export type CtpatReviewStatusEnum = 'compliant' | 'grace_period' | 'non_compliant' | 'provisional';



// Create Default Function
export function createDefaultCtpatReview(): CtpatReview {
  return {
    id: uuid(),
    complianceScreenRequired: false,
    // $FlowExpectedError Required field, but no default value
    status: null,
    expiresAt: null,
    complianceContactEmail: '',
  };
}


// Validations
export function ctpatReviewCalculateErrors(ctpatReview: CtpatReview, prefix?: string): $ReadOnlyArray<FormError> {
  const errors = [];
  if (ctpatReview == null ) return errors;

  if (isBlank(ctpatReview.status))
    addError(errors, prefix, 'Status is required', ['status']);
  if (isBlank(ctpatReview.complianceContactEmail))
    addError(errors, prefix, 'Compliance Contact Email is required', ['complianceContactEmail']);

  return errors;
}

