// This file was auto-generated by x10. Do not modify by hand.
// @flow


import { v4 as uuid } from 'uuid';

import { addError, type FormError } from 'react_lib/form/FormProvider';
import isBlank from 'react_lib/utils/isBlank';

import { type CompanyEntity } from 'client_page/entities/CompanyEntity';
import { type User } from 'client_page/entities/User';


// Type Definition
export type Company = {
  +id: string,
  +website: string,
  +primaryEntity: ?string,
  +entities: $ReadOnlyArray<CompanyEntity>,
  +primaryContact: ?string,
  +users: $ReadOnlyArray<User>,
};


// Create Default Function
export function createDefaultCompany(): Company {
  return {
    id: uuid(),
    website: '',
    primaryEntity: null,
    entities: [],
    primaryContact: null,
    users: [],
  };
}


// Validations
export function companyCalculateErrors(company: Company, prefix?: string): $ReadOnlyArray<FormError> {
  const errors = [];

  if (isBlank(company.primaryEntity))
    addError(errors, prefix, 'Primary Entity is required', ['primaryEntity']);
  if (isBlank(company.primaryContact))
    addError(errors, prefix, 'Primary Contact is required', ['primaryContact']);

  return errors;
}

