// This file was auto-generated by x10. Do not modify by hand.
// @flow

import * as React from 'react';
import { createFragmentContainer, graphql } from 'react-relay';

import Group from 'latitude/Group';
import Text from 'latitude/Text';

import DateDisplay from 'react_lib/display/DateDisplay';
import TextDisplay from 'react_lib/display/TextDisplay';
import Button from 'react_lib/latitude_wrappers/Button';
import Table from 'react_lib/table/Table';

import { type Move } from 'small/entities/Move';

import { type Moves_moves } from './__generated__/Moves_moves.graphql';



type Props = {|
  +moves: Moves_moves,
|};
function Moves(props: Props): React.Node {
  const { moves } = props;

  return (
    <Group
      flexDirection='column'
    >
      <Text
        scale='display'
        children='Moves'
      />
      <Table
        data={ moves }
        columns={
          [
            {
              id: 'Date',
              Header: 'Date',
              width: 140,
              accessor: (data) => data?.date,
              Cell: ({ value }) =>
                <DateDisplay
                  value={ value }
                />
              ,
            },
            {
              id: 'From',
              Header: 'From',
              width: 140,
              accessor: (data) => data?.from?.name,
              Cell: ({ value }) =>
                <TextDisplay
                  value={ value }
                />
              ,
            },
            {
              id: 'To',
              Header: 'To',
              width: 140,
              accessor: (data) => data?.to?.name,
              Cell: ({ value }) =>
                <TextDisplay
                  value={ value }
                />
              ,
            },
            {
              id: 'Tenant',
              Header: 'Tenant',
              width: 140,
              accessor: (data) => data?.tenant?.name,
              Cell: ({ value }) =>
                <TextDisplay
                  value={ value }
                />
              ,
            },
            {
              id: 'Action',
              Header: 'Action',
              width: 140,
              accessor: (data) => data,
              Cell: ({ value }) =>
                <Group>
                  <Button
                    label='View'
                    url={ '/moves/view/' + value?.id }
                  />
                  <Button
                    label='Edit'
                    url={ '/moves/edit/' + value?.id }
                  />
                </Group>
              ,
            },
          ]
        }
      />
    </Group>
  );
}

// $FlowExpectedError
export default createFragmentContainer(Moves, {
  moves: graphql`
    fragment Moves_moves on Move @relay(plural: true) {
      id
      date
      from {
        id
        toStringRepresentation
        name
      }
      tenant {
        id
        toStringRepresentation
        name
      }
      to {
        id
        toStringRepresentation
        name
      }
    }
  `,
});

