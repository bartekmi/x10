// This file was auto-generated by x10. Do not modify by hand.
// @flow


import { v4 as uuid } from 'uuid';

import { addError, type FormError } from 'react_lib/form/FormProvider';
import isBlank from 'react_lib/utils/isBlank';

import { companyEntityCalculateErrors, createDefaultCompanyEntity, type CompanyEntity } from 'client_page/entities/CompanyEntity';
import { contactCalculateErrors, createDefaultContact, type Contact } from 'client_page/entities/Contact';
import { type User } from 'client_page/entities/User';


// Type Definition
export type Company = {
  +id: string,
  +website: string,
  +primaryEntity: CompanyEntity,
  +entities: $ReadOnlyArray<CompanyEntity>,
  +primaryContact: Contact,
  +users: $ReadOnlyArray<User>,
};


// Create Default Function
export function createDefaultCompany(): Company {
  return {
    id: uuid(),
    website: '',
    primaryEntity: createDefaultCompanyEntity(),
    entities: [],
    primaryContact: createDefaultContact(),
    users: [],
  };
}


// Validations
export function companyCalculateErrors(company: Company, prefix?: string): $ReadOnlyArray<FormError> {
  const errors = [];
  if (company == null ) return errors;


  errors.push(...companyEntityCalculateErrors(company.primaryEntity, 'primaryEntity'));
  errors.push(...contactCalculateErrors(company.primaryContact, 'primaryContact'));

  return errors;
}

