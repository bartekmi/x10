name: Booking
description: A pre-<Shipment>. An intention to ship goods containing most of the information necessary to eventually generate a <Shipment>
datagen_quantity: 40

attributes:
  - name: name
    dataType: String
    mandatory: true
    placeholderText: Description of shipment
    datagen_pattern: Booking ~LLL.DDDDDDDD~

  - name: status
    dataType: BookingStatus
    mandatory: true
    readOnly: true
    datagen_pattern: (20% => draft | 20% => waitingForPricing | 60% => awaitingReview)

  - name: transportationMode
    dataType: TransportationMode
    mandatory: true

  - name: cargoReadyDate
    dataType: Date
    mandatory: true
    datagen_min: =$CURRENT_DATE - 100
    datagen_max: =$CURRENT_DATE + 50

  - name: targetDeliveryDate
    dataType: Date
    datagen_pattern: (75% => null)
    datagen_min: =$CURRENT_DATE - 100
    datagen_max: =$CURRENT_DATE + 50
    validations:
      - message: Target Delivery Date can't be before Cargo Ready Date
        trigger: targetDeliveryDate < cargoReadyDate

  - name: notifyParty
    dataType: String
    toolTip: The company entity which should be notified of the arrival of the cargo
    ui: TextArea

  - name: isLcl
    dataType: Boolean
    mandatory: true
    default: false
    label: Shipment Type
    ui: BooleanViaButtons

# FUTURE I can forsee many cases (such as this one) where we'd like to include specific 
# UI paremeters in the entities definitions. The danger here is that this may tie
# the Entity definition too closesly to a particular UI library definition (which would be bad)
# So we must use semantic-level attributes, not UI-specific ones.
# Having said that, one can imagine a generic definition of an abstract BooleanViaButtons component
# which has a number of parameters - such as the ones below.
# If that were the case, what's the best way to specify such parameters? 
# 1) The dot notation is one option
# 2) Another option (perhaps more clean) would be a has option:
# ui: 
#   element: BooleanViaButtons
#   trueLabel: LCL
#   falseLabel: FCL
#
# In that case, "ui: BooleanViaButons" becomes a shorthand for the above with all attributes 
# set as their default values
#
#    ui.trueLabel: "LCL"
#    ui.falseLabel: "FCL"

  - name: isLtl
    dataType: Boolean
    mandatory: true
    default: false
    label: Shipment Type
    ui: BooleanViaButtons

  - name: incoterms
    dataType: Incoterms
    mandatory: true
    datagen_pattern: (50% => FOB | 25% => EXW)

  - name: wantsOriginService
    dataType: Boolean
    default: true
    datagen_pattern: (50% => True)

  - name: wantsDestinationService
    dataType: Boolean
    default: false
    datagen_pattern: (75% => True)

  - name: wantsExportCustomsService
    dataType: Boolean
    default: false
    datagen_pattern: (25% => True)

  - name: descriptionOfProducts
    dataType: String
    ui: TextArea
    applicableWhen: transportationMode == 'truck'
    toolTip: Please enter a short and concise description of products in this shipment
    datagen_pattern: (85% => null)
    datagen_random_text: 5 to 30 words

  - name: specialInstructions
    dataType: String
    ui: TextArea
    placeholderText: Enter any special instructions, such as handling information
    datagen_pattern: (95% => null)
    datagen_random_text: 5 to 100 words

  - name: weightKg
    dataType: Float
    mandatory: true
    datagen_min: 100
    datagen_max: 5000

  - name: volumeCm
    dataType: Float
    datagen_min: 0.1
    datagen_max: 500

  - name: priority
    dataType: Priority
    mandatory: true
    default: normal
    datagen_pattern: (5% => high | 95% => normal)

derivedAttributes:
  - name: isShipperBooking
    dataType: Boolean
    formula: =shipper == $user.company

  - name: isConsigneeBooking
    dataType: Boolean
    formula: =consignee == $user.company

  - name: requiresChineseProductDescription
    dataType: Boolean
    formula: =isShipperBooking && company.countryCode == 'CN'

associations:
  - name: shipment
    dataType: Shipment
    ui: AssociationEditor
    owns: true
    datagen_quantity: 1

  - name: shipper
    dataType: Company
    mandatory: true
    ui: AssociationEditor
  - name: consignee
    dataType: Company
    mandatory: true
    ui: AssociationEditor

    # Origin Location / Port
  - name: originLocation
    dataType: Location
    mandatory: true
    ui: AssociationEditor

  - name: originPort
    dataType: Port
    ui: AssociationEditor
    validations:
      - message: Origin Port must be provided when 'Wants Origin Service' is false
        trigger: !wantsOriginService

    # Destination Location / Port
  - name: destinationPort
    dataType: Port
    ui: AssociationEditor
    validations:
      - message: Destination Port must be provided when 'Wants Destination Service' is false
        trigger: !wantsDestinationService

  - name: destinationLocation
    dataType: Location
    ui: AssociationEditor
    validations:
      - message: Destination Location must be provided when 'Wants Destination Service' is true
        trigger: wantsDestinationService


  - name: cargo
    dataType: Cargo
    owns: true
    mandatory: true

  - name: bookingHsCodes
    dataType: BookingHsCode
    owns: true
    many: true
    mandatory: true
    applicableWhen: transportationMode != 'truck'
    datagen_quantity: 1..3

  - name: metadata
    dataType: MetadataValue
    owns: true
    many: true
    ui: MetadataEditor
    datagen_quantity: 0..2


enums:
  - name: BookingStatus
    values:
      - value: draft
        label: Draft
        icon: draft
      - value: waitingForPricing
        label: Waiting For Pricing
        icon: dollar-sign
      - value: awaitingReview
        label: Awaiting Your Review
        icon: ticket


      